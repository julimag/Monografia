%===============================================================================
% CAPITULO 2 - ESTADO DA ARTE
%===============================================================================
\chapter{Fundamentação Teórica}\label{chp:2}


%===================================================================
\section{Desenvolvimento Ágil de Software}
%===================================================================

Em 2001, um grupo de dezessete profissionais veteranos da área de software se reuniu para discutir sobre seus trabalhos e os métodos utilizados. Embora cada um deles tivesse suas próprias práticas e teorias de como fazer um projeto de software ter sucesso, cada qual com as suas particularidades, eles imaginavam haver um subconjunto de princípios comum. 

A partir do reconhecimento dos aspectos similares, eles criaram o Manifesto para o Desenvolvimento Ágil de Software \cite{Manifesto2001}, freqüentemente chamado apenas de Manifesto Ágil, e o termo Desenvolvimento Ágil passou a descrever abordagens de desenvolvimento que seguissem os tais princípios.

O manifesto é composto de quatro valores e doze princípios, os quais descrevem a essência de um conjunto de abordagens para desenvolvimento ágil de software. 

Os valores são: 

\begin{enumerate}
 \item Indivíduos e interações ao invés de processos e ferramentas;
 \item Software executável ao invés de documentação;
 \item Colaboração do cliente ao invés de negociação de contratos;
 \item Respostas rápidas a mudanças ao invés de seguir planos.
\end{enumerate}

E os princípios são:

\begin{enumerate}
 \item Nossa maior prioridade é satisfazer o cliente, através da entrega adiantada e contínua de software de valor;
 \item Aceitar mudanças de requisitos, mesmo no fim do desenvolvimento. Processos ágeis se adequam a mudanças, para que o cliente possa tirar vantagens competitivas;
 \item Entregar software funcionando com freqüencia, na escala de semanas até meses, com preferência aos períodos mais curtos;
 \item Pessoas relacionadas à negócios e desenvolvedores devem trabalhar em conjunto e diáriamente, durante todo o curso do projeto;
 \item Construir projetos ao redor de indivíduos motivados. Dando a eles o ambiente e suporte necessário, e confiar que farão seu trabalho;
 \item O Método mais eficiente e eficaz de transmitir informações para, e por dentro de um time de desenvolvimento, é através de uma conversa cara a cara;
 \item Software funcional é a medida primária de progresso;
 \item Processos ágeis promovem um ambiente sustentável. Os patrocinadores, desenvolvedores e usuários, devem ser capazes de manter indefinidamente, passos constantes;
 \item Contínua atenção à excelência técnica e bom design, aumenta a agilidade;
 \item Simplicidade: a arte de maximizar a quantidade de trabalho que não precisou ser feito;
 \item As melhores arquiteturas, requisitos e designs emergem de times auto-organizáveis;
 \item Em intervalos regulares, o time reflete em como ficar mais efetivo, então, se ajustam e otimizam seu comportamento de acordo.
\end{enumerate}


O manifesto reconhece a importância de determinados conceitos como processos, ferramentas, documentação, contratos e planos no desenvolvimento de software, mas identifica aspectos ainda mais importantes a serem valorizados.

%===================================================================
\section{Desenvolvimento Clássico de Software}
%===================================================================

% Comparação \cite{Comparacao2004}.


%===================================================================
\section{Tecnologia Assistiva Digital}
%===================================================================

Tecnologia Assistiva (TA) refere-se ao conjunto de artefatos disponibilizados às pessoas com necessidades especiais, que contribuem para prover-lhes uma vida mais independente, com mais qualidade e possibilidades de inclusão social \cite{Sonza2008}.

A tecnologia assistiva digital refere-se aos sistemas que oferecem soluções para tentar suprir as limitações de uma parcela da sociedade. Essas limitações podem ser motoras, visuais, auditivas, entre outras.

Atualmente os próprios sistemas operacionais, inclusive àqueles para dispositivos móveis, possuem alguns recursos de acessibilidade embutidos no próprio software.

%===================================================================
\subsection{Deficiências humana e dificuldades no mundo virtual}
%===================================================================

%===================================================================
\section{Acessibilidade Digital}
%===================================================================

%===================================================================
\subsection{Acessibilidade, Usabilidade e Comunicabilidade}
%===================================================================

%===================================================================
\section{Testes de Software}
%===================================================================

%===================================================================
\subsection{Testes de Usabilidade}
%===================================================================

%===================================================================
\subsection{Testes de Acessibilidade}
%===================================================================
